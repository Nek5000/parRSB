name: Coarse tests
on:
  push:
    branches: [main, next]
  pull_request:
    branches: [main, next]
env:
  GITHUB.TOKEN: ${{ secrets.token }}
  CIDIR: parRSB-github-ci
  MPICH_FC: gfortran
jobs:
  coarse:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: [e3q, tgv, box_3x5x7]
        np: [1, 2, 3, 4]
      fail-fast: false
    name: "${{ matrix.test }}, NP = ${{ matrix.np }}"
    env:
      CC: mpicc
    steps:
      - uses: actions/checkout@v3
      - name: Install apt dependencies
        shell: bash
        run: |
          sudo apt -y update
          sudo apt install -y mpich libmpich-dev libblas-dev liblapack-dev
          sudo apt install -y gfortran build-essential
      - name: Clone Nek5000 and tests
        shell: bash
        run: |
          export PARRSBDIR=`pwd`

          # Change to home directory
          cd ${HOME}

          # Clone Nek5000
          git clone https://github.com/thilinarmtb/Nek5000.git -b algo
          echo "NEK_SOURCE_ROOT=`pwd`/Nek5000" >> $GITHUB_ENV

          cp -r ${PARRSBDIR} Nek5000/3rd_party/parRSB/

          # Clone tests
          git clone https://github.com/thilinarmtb/${CIDIR}.git

          # For MPI
          echo "localhost:4" > hostfile
      - name: Schur with tolerance = 1e-5 or 20 project iterations
        if: always()
        shell: bash
        run: |
          cd ${HOME}/${CIDIR}/${{ matrix.test }}

          # Copy the scripts
          cp ${NEK_SOURCE_ROOT}/bin/makenek ${NEK_SOURCE_ROOT}/bin/nekmpi .

          # Buld the case
          PPLIST="PARRSB DPROCMAP" ./makenek ${{ matrix.test }}

          # Run with xxt as preconditioner
          ./nekmpi ${{ matrix.test }} ${{ matrix.np }} | tee xxt.log
          grep 'PRES gmres' xxt.log | awk '{ print $4 }' > xxt.iter

          # Run with Schur as preconditioner
          sed -i.bak 's/semg_xxt/schur/g' ${{ matrix.test }}.par
          ./nekmpi ${{ matrix.test }} ${{ matrix.np }} | tee schur.log
          grep 'PRES gmres' schur.log | awk '{ print $4 }' > schur.iter

          diff=`paste -d' ' schur.iter xxt.iter | awk '{ tmp=$1-$2; print sqrt(tmp*tmp) }' | sort -n | tail -n 1`
          echo ${diff}
